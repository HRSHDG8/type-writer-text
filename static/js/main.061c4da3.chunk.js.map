{"version":3,"sources":["../../src/cursor/Cursor.tsx","../../src/index.tsx","App.js","index.js"],"names":["Cursor","color","blinkSpeed","style","className","classNames","TypeWriterText","animationSpeed","cursorProps","showCursor","React","text","splits","setTimeout","index","setDisplayText","console","setIndex","upadateText","clearTimeout","App","ReactDOM","render","document","getElementById"],"mappings":"uTAOO,MAAMA,EAAgC,EAAGC,QAAF,mBAA8BC,aAAa,WACrF,MAAMC,EAAQ,CAAE,UAAF,EAAoB,eAAgBD,GAClD,OAAO,gCAAME,UAAWC,EAA2BF,MAAOA,GAA1D,MCESG,EAAiB,EAAC,OAAQC,iBAAR,IAA8BC,cAAc,CAAEP,MAAF,mBAA6BC,WAAY,QAAUO,cAAa,MAA7G,QACUC,mBAAtC,IAD4B,mBACtB,EADsB,KACtB,EADsB,OAEFA,mBAA1B,GAF4B,mBAEtB,EAFsB,KAEtB,EAFsB,KAmB5B,OAPAA,oBAAgB,KACd,GAAIC,eAAJ,IAAqBA,EAAoB,CACvC,MAAMC,EAAmBD,QAAzB,IACAE,WAAW,KAXMD,KACfE,GAASF,EAAb,SACEG,EAAeJ,WAAfI,IACAC,gBAA2BJ,EAA3BI,IACAC,EAASH,EAATG,KAOmBC,KAAnBL,GAEF,OAAOM,gBACN,CANHT,IAOOA,0CAAqBD,EAAaC,2CAAH,IAAtC,O,MCrBaU,MAJH,IACH,4BAAK,kBAACd,EAAD,CAAgBK,KAAM,mBAAoBF,YAAY,KCApEY,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.061c4da3.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport classNames from '../styles.module.css';\r\nexport type CursorProps = {\r\n    color?: string\r\n    blinkSpeed?: any\r\n}\r\n\r\nexport const Cursor: React.FC<CursorProps> = ({ color = 'rgba(0,0,0,0.87)', blinkSpeed = '0.8s' }) => {\r\n    const style = { '--color': color, '--blinkSpeed': blinkSpeed } as React.CSSProperties;\r\n    return <span className={classNames.blinkingCursor} style={style}>|</span>\r\n}","import * as React from 'react';\nimport { Cursor, CursorProps } from './cursor/Cursor';\n\ninterface Props {\n  text: string,\n  animationSpeed: number,\n  showCursor: boolean\n  cursorProps: CursorProps\n\n}\n\nexport const TypeWriterText = ({ text, animationSpeed = 100, cursorProps = { color: 'rgba(0,0,0,0.87)', blinkSpeed: '0.8s' }, showCursor = true }: Props) => {\n  const [displayText, setDisplayText] = React.useState('');\n  const [index, setIndex] = React.useState(0);\n\n  const upadateText = (splits: string[]) => {\n    if (index <= splits.length) {\n      setDisplayText(text.substr(0, index));\n      console.log(splits, index, splits[index]);\n      setIndex(index + 1);\n    }\n  }\n\n  React.useEffect(() => {\n    if (text !== null && text !== undefined) {\n      const splits: string[] = text.split(\"\");\n      setTimeout(() => { upadateText(splits) }, animationSpeed);\n    }\n    return clearTimeout();\n  }, [index])\n  return <span>{displayText} {showCursor ? <Cursor {...cursorProps} /> : null}</span>\n\n}\n","import React from 'react'\n\nimport { TypeWriterText } from 'type-writer-text'\nimport 'type-writer-text/dist/index.css'\n\nconst App = () => {\n  return <h3 ><TypeWriterText text={\"Happy Quarantine\"} showCursor={false} /></h3>\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}